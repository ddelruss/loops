Diagram
<% if flash[:message1] %>
	<div><%= flash[:message1] %></div>
	<div><%= raw(@graph_json) %></div>
<% end %>

<% if flash[:message2] %>
<div><%= flash[:message2] %></div>
<% end %>


<!DOCTYPE html>
<html>
<head>
    <script type="text/javascript" src="http://mbostock.github.com/d3/d3.js"></script>
</head>
<body>
<div id="viz"></div>
<script type="text/javascript">

var width = 960,
    height = 500,
    radius = 40

var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

var json =  <%= raw(@graph_json) %>

// var json = /* <%= raw(@myInMemoryObject) %> */ {
//     "nodes":[{"name":"Damien","id":"a"}, {"name":"Bob","id":"b"}],
//     "links":[{"source":0, "target":1,"value":1}]
// }

var force = d3.layout.force()
    .gravity(.05)
    .distance(100)
    .charge(-100)
    .size([width, height]);


  force
      .nodes(json.nodes)
      .links(json.links)
      .start();

  var link = svg.selectAll(".link")
      .data(json.links)
    .enter().append("line")
      .attr("class", "link")
      .style("stroke", "#000000")
      .style("stroke-width", 1.0);

  var node = svg.selectAll(".node")
      .data(json.nodes)
    .enter().append("g")
      .attr("class", "node")
      .call(force.drag);

  node.append("circle")
          .attr("class", "node")
          .attr("r", radius)
          .style("fill", function(d) { if (d.name == "Damien") return "yellow"; else return "pink"; })
          .style("stroke", "#000000")
          .style("stroke-width", 2.0)
          .attr("x", -radius)
          .attr("y", -radius)
          .attr("width", 2 * radius)
          .attr("height", 2 * radius);
          
  node.append("text")
      .attr("text-anchor", "middle")
      .attr("dy", ".35em")
      .text(function(d) { return d.name });

  force.on("tick", function() {
    link.attr("x1", function(d) { return d.source.x; })
        .attr("y1", function(d) { return d.source.y; })
        .attr("x2", function(d) { return d.target.x; })
        .attr("y2", function(d) { return d.target.y; });

    node.attr("transform", function(d) { return "translate(" + d.x + "," + d.y + ")"; });
  });

</script>